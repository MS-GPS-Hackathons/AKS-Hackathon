//Add comments
# Use Azure CLI to build a Docker image and push it to Azure Container Registry (ACR)

# The 'az acr build' command is used to build the Docker image and push it to ACR
# '--resource-group AKSHackathon' specifies the resource group that the ACR instance belongs to
# '--registry akshackathonpparpas.azurecr.io' specifies the ACR instance where the Docker image will be pushed
# '--image pparpas-api:v1' specifies the name and tag of the Docker image
# '.' at the end of the command specifies that the Dockerfile is in the current directory

az acr build --resource-group AKSClusterIntroPrivate_group --registry akshackathonacrpparpas.azurecr.io --image hack/web:v1 .







# Build a Docker image using the Dockerfile in the current directory
# The '-t' option tags the image with the name 'aks-api:v1'
docker build -t aks-api:v1 .

# Log in to the Azure Container Registry (ACR) instance
# '--name akshackathonpparpas.azurecr.io' specifies the name of the ACR instance
az acr login --name akshackathonpparpas.azurecr.io

# Tag the Docker image for the ACR instance
# 'aks-api:v1' is the name and tag of the Docker image
# 'akshackathonpparpas.azurecr.io/aks-api:v1' is the name and tag of the Docker image in the ACR instance
docker tag aks-api:v1 akshackathonpparpas.azurecr.io/aks-api:v1

# Push the Docker image to the ACR instance
# 'akshackathonpparpas.azurecr.io/aks-api:v1' is the name and tag of the Docker image in the ACR instance
docker push akshackathonpparpas.azurecr.io/aks-api:v1



az aks get-credentials --resource-group AKSClusterIntroPrivate_group --name AKSClusterIntroPrivate --overwrite-existing
az aks command invoke --resource-group AKSClusterIntroPrivate_group --name AKSClusterIntroPrivate --command "kubectl get pods -A"



az network bastion rdp --name "vnet-aks-Bastion" --resource-group "AKSHackathon-Private" --target-resource-id "/subscriptions/beae496e-0906-469f-8d32-8a11adb98c65/resourceGroups/AKSHackathon-Private/providers/Microsoft.Compute/virtualMachines/vm-aks-jumbbox"